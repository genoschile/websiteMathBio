---
const menuOptions = [
  {
    label: "Change language",
    action: "changeLanguage",
    href: "#",
  },
  {
    label: "Toggle theme",
    action: "toggleTheme",
    href: "#",
  },
];
---

<nav
  id="dropdownToggle"
  class="fixed left-4 bottom-4 z-10 bg-red-300 rounded-full p-2 grid content-center shadow-lg cursor-pointer hover:bg-red-400 transition-all duration-300"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    width="24"
    height="24"
    fill="currentColor"
    ><path
      d="M5.32943 3.27158C6.56252 2.8332 7.9923 3.10749 8.97927 4.09446C10.1002 5.21537 10.3019 6.90741 9.5843 8.23385L20.293 18.9437L18.8788 20.3579L8.16982 9.64875C6.84325 10.3669 5.15069 10.1654 4.02952 9.04421C3.04227 8.05696 2.7681 6.62665 3.20701 5.39332L5.44373 7.63C6.02952 8.21578 6.97927 8.21578 7.56505 7.63C8.15084 7.04421 8.15084 6.09446 7.56505 5.50868L5.32943 3.27158ZM15.6968 5.15512L18.8788 3.38736L20.293 4.80157L18.5252 7.98355L16.7574 8.3371L14.6361 10.4584L13.2219 9.04421L15.3432 6.92289L15.6968 5.15512ZM8.97927 13.2868L10.3935 14.7011L5.09018 20.0044C4.69966 20.3949 4.06649 20.3949 3.67597 20.0044C3.31334 19.6417 3.28744 19.0699 3.59826 18.6774L3.67597 18.5902L8.97927 13.2868Z"
    ></path></svg
  >
</nav>

<ul
  id="dropdownMenu"
  class="hidden fixed left-10 bottom-24 bg-white shadow-lg rounded-lg p-2 space-y-2 border border-gray-200"
>
  {
    menuOptions.map((item) => (
      <li>
        <a
          href={item.href}
          data-action={item.action}
          class="block px-4 py-2 hover:bg-gray-100 rounded cursor-pointer"
        >
          {item.label}
        </a>
      </li>
    ))
  }
</ul>

<style>
  .nav-hidden {
    opacity: 0;
    transform: translateY(20px);
    pointer-events: none;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }
</style>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const toggle = document.getElementById("dropdownToggle");
    const menu = document.getElementById("dropdownMenu");

    toggle.addEventListener("click", () => {
      menu.classList.toggle("hidden");
    });

    document.addEventListener("click", (e) => {
      if (!toggle.contains(e.target) && !menu.contains(e.target)) {
        menu.classList.add("hidden");
      }
    });
  });
</script>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const $nav = document.getElementById("dropdownToggle");

    let [lastScroll, ticking] = [window.scrollY, false];

    function handleScroll() {
      const currentScroll = window.scrollY;

      if (currentScroll > lastScroll && currentScroll > 100) {
        // Scrolling down → Ocultar nav
        $nav.classList.add("nav-hidden");
      } else if (currentScroll < lastScroll) {
        // Scrolling up → Mostrar nav
        $nav.classList.remove("nav-hidden");
      }

      lastScroll = currentScroll;
      ticking = false;
    }

    window.addEventListener("scroll", () => {
      if (!ticking) {
        window.requestAnimationFrame(handleScroll);
        ticking = true;
      }
    });
  });
</script>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const menu = document.getElementById("dropdownMenu");

    menu?.addEventListener("click", (e) => {
      const target = e.target.closest("a[data-action]");
      if (!target) return;

      const action = target.dataset.action;

      switch (action) {
        case "changeLanguage":
          alert("Change language clicked");
          break;
        case "toggleTheme":
          alert("Change language clicked");
          // document.documentElement.classList.toggle("dark");
          break;
        case "openSettings":
          alert("Open settings clicked");
          break;
      }

      e.preventDefault();
    });
  });
</script>
