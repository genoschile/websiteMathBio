---
import PageHeader from "@components/layout/pageHeader.astro";
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import ArrowdownIcon from "@icons/arrowdowIcon.astro";

const collaborations = await getCollection("collaborations");
const publications = await getCollection("publications");
const currentPapers = publications.map((pub) => ({
  ...pub.data,
}));

const currentCollaboration = collaborations.map(({ data }) => ({
  ...data,
}));
const collaborationObj = currentCollaboration[0];
const collaborationArray = Object.values(collaborationObj) as Array<{
  name: string;
  position: string;
  grade: string;
  description: string;
  urlImage: string;
  urlLinkedIn: string;
}>;

const updatedImages = [
  ...collaborationArray.map((profile) => ({
    src: profile.urlImage,
    alt: profile.name,
  })),
];
---

<Layout title="Collaborations">
  <PageHeader
    title="Collaborations"
    description="Explore our collaborations with other research groups and institutions."
  />

  <section
    class="p-4 rounded-md max-w-full size-full min-h-screen object-cover relative gap-12 overflow-hidden"
  >
    <ul
      class="profile-images flex flex-col gap-10 justify-center items-center w-full overflow-hidden"
    >
      {
        updatedImages.map((image, index) => (
          <li class="rounded-lg border bg-card text-card-foreground shadow-sm w-full px-4 py-2 flex flex-col cursor-pointer hover:bg-card-hover transition-colors transition-width duration-200 ease-in-out relative group list-element">
            <div class="flex items-center gap-4 ">
              <figure class="h-20 w-20  ">
                <img
                  src={image.src}
                  alt={image.alt}
                  class="max-w-full max-h-full object-cover rounded-sm"
                />
                <figcaption class="sr-only">{image.alt}</figcaption>
              </figure>

              <h2 class="text-2xl font-bold ">
                {collaborationArray[index].name}
              </h2>

              <button
                class="ml-auto toggle-btn transition-transform duration-300 "
                aria-expanded="false"
              >
                <ArrowdownIcon aria-label="View profile details" />
              </button>
            </div>

            <div class="accordion-content h-0 overflow-hidden">
              <h1 class="text-xl font-bold tracking-tight text-foreground sm:text-2xl">
                {collaborationArray[index].position} -{" "}
                {collaborationArray[index].grade}
              </h1>

              <hr class="mt-2" />

              <p class="text-lg font-semibold mt-2 text-muted-foreground my-4 text-center">
                {collaborationArray[index].description}
              </p>

              <h1 class="text-xl font-bold tracking-tight text-foreground sm:text-2xl">
                Publications by {collaborationArray[index].name}
              </h1>

              <hr class="mt-2" />

              <ul id="search-results" class="space-y-4">
                {currentPapers.filter(
                  (paper) =>
                    paper.authors &&
                    paper.authors.includes(collaborationArray[index].name)
                ).length > 0 ? (
                  currentPapers
                    .filter(
                      (paper) =>
                        paper.authors &&
                        paper.authors.includes(collaborationArray[index].name)
                    )
                    .map((paper) => (
                      <li class="border rounded-md p-4 shadow-sm mb-4 list-papers-team">
                        <h3 class="title font-semibold text-lg">
                          {paper.title}
                        </h3>
                        <p class="authors text-sm text-muted-foreground">
                          {paper.authors.join(", ")}
                        </p>
                        <p class="meta text-xs italic">
                          {paper.type} ({paper.year})
                        </p>
                        {paper.abstract && (
                          <p class="abstract mt-2 text-sm text-foreground line-clamp-3">
                            {paper.abstract}
                          </p>
                        )}
                        {paper.tags && paper.tags.length > 0 && (
                          <p class="tags mt-2 text-xs text-muted-foreground">
                            <strong>Tags:</strong> {paper.tags.join(", ")}
                          </p>
                        )}
                        {paper.url && (
                          <a
                            href={paper.url}
                            class="url text-primary text-sm mt-2 inline-block hover:underline"
                            target="_blank"
                            rel="noopener noreferrer"
                          >
                            View Publication
                          </a>
                        )}
                      </li>
                    ))
                ) : (
                  <li class="border rounded-md p-4 shadow-sm mb-4 text-center text-muted-foreground mt-4">
                    No publications found.
                  </li>
                )}
              </ul>
            </div>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>

<style>
  .list-papers-team {
    &:nth-child(1) {
      margin-block-start: 1rem;
    }
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const $listElements = document.querySelectorAll(".list-element");

    const closeAllAccordions = () => {
      $listElements.forEach((el) => {
        const btn = el.querySelector(".toggle-btn");
        const content = el.querySelector(".accordion-content");

        btn.setAttribute("aria-expanded", "false");
        btn.classList.remove("rotate-180");

        content.style.height = "0px";
        content.classList.remove("pt-4");
        content.classList.remove("open");
      });
    };

    $listElements.forEach((element) => {
      const button = element.querySelector(".toggle-btn");
      const content = element.querySelector(".accordion-content");

      content.style.overflow = "hidden";
      content.style.transition = "height 300ms ease-in-out";

      const toggleAccordion = () => {
        const isExpanded = button.getAttribute("aria-expanded") === "true";

        if (!isExpanded) {
          closeAllAccordions();
        }

        const nowExpanded = !isExpanded;
        button.setAttribute("aria-expanded", String(nowExpanded));
        button.classList.toggle("rotate-180", nowExpanded);

        if (nowExpanded) {
          const scrollHeight = content.scrollHeight;
          content.style.height = scrollHeight + "px";
          content.classList.add("pt-4");
          content.classList.add("open");
        } else {
          content.style.height = "0px";
          content.classList.remove("pt-4");
          content.classList.remove("open");
        }
      };

      element.addEventListener("click", () => {
        toggleAccordion();
      });

      button.addEventListener("click", (event) => {
        event.stopPropagation();
        toggleAccordion();
      });

      // Reset height to 'auto' after transition for flexibility
      content.addEventListener("transitionend", (e) => {
        if (content.classList.contains("open")) {
          content.style.height = "auto";
        }
      });
    });
  });
</script>
