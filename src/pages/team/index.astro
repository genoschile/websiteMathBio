---
import Facebook from "../../icons/facebook.astro";
import Linkedin from "../../icons/linkedin.astro";
import Github from "../../icons/github.astro";
// import type { Member } from "../../interface";
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

const currentPath = Astro.url.pathname;
// const members: Member[] = await getCollection("members");

type Member = {
  id: number;
  name: string;
  position: string;
  grade: string;
  image: string;
};

const members: Member[] = [
  {
    id: 1,
    name: "Karen L칩pez",
    position: "L칤der de grupo",
    grade: "Doctora en Matem치ticas",
    image: "/images/karen.jpg"
  },
  {
    id: 2,
    name: "Carlos Ruiz",
    position: "Investigador",
    grade: "Maestr칤a en Bioinform치tica",
    image: "/images/carlos.jpg"
  },
  {
    id: 3,
    name: "Ana Mar칤a Torres",
    position: "Asistente de investigaci칩n",
    grade: "Estudiante de pregrado",
    image: "/images/ana.jpg"
  },
  {
    id: 4,
    name: "Luis Mendoza",
    position: "Colaborador externo",
    grade: "PhD en Biolog칤a Computacional",
    image: "/images/luis.jpg"
  }
];


const karen = members.find((member) => member.id === 1);

const hasKaren = karen && karen;
---

<Layout title="Home">

	
	<div class="container">
		<header>
			<h1>Team MathBio</h1>
			<i> 游댷 </i>
		</header>

		<main>
			{hasKaren && (
				<div class="principal">
					<h2>{karen.name}</h2>
					<p>{karen.position}</p>
					<p>{karen.grade}</p>
					<a href={`${currentPath}/${karen.id}`}>
						<img
							transition:name={`img${karen.name}`}
							src={karen.image}
							alt={karen.name}
						/>
					</a>
				</div>
			)}

			<div class="resto">
				{members.slice(1).map((member) => (
					<div class="members-lab">
						<h2 class="name">{member.name}</h2>
						<p class="grade">{member.grade}</p>
						<a href={`${currentPath}/${member.id}`}>
							<img
								transition:name={`img${member.name}`}
								src={member.image}
								alt={member.name}
							/>
						</a>

						<div class="social-icons">
							<a
								href="https://facebook.com"
								target="_blank"
								class="icon facebook"
							>
								<Facebook />
							</a>
							<a
								href="https://twitter.com"
								target="_blank"
								class="icon twitter"
							>
								<Github />
							</a>
							<a
								href="https://instagram.com"
								target="_blank"
								class="linkedin icon"
							>
								<Linkedin />
							</a>
						</div>
					</div>
				))}
			</div>
		</main>

		<footer></footer>
	</div>
</Layout>


<script>
	const grid = document.querySelector(".resto");

	document.addEventListener("mousemove", (e) => {
		if (grid instanceof HTMLElement) {
			grid.style.setProperty("--x", `${e.x}px`);
			grid.style.setProperty("--y", `${e.y}px`);
		}
	});
</script>

<style>
	.icon {
		width: 50px;
		height: 50px;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: #333;
		color: #fff;
		text-decoration: none;
		border-radius: 50%;
		font-size: 1.2rem;
		transition: background-color 0.3s ease;
		padding: 0.3rem
		cursor: pointer;

		&:hover {
			background-color: #555;
		}
	}

	.container {
		margin: 0 auto;
		max-width: 1200px;
		padding: 1rem;
		width: 100%;

		display: grid;
		gap: 1rem;
		place-items: center;
		isolation: isolate;

		& header {
			display: flex;
			align-items: center;
			gap: 1rem;
			flex-direction: column;

			& h1 {
				text-wrap: balance;
			}
		}

		& main {
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			gap: 2rem;
			width: 100%;

			& .principal {
				position: relative;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				font-size: 1rem;
				gap: 0.25rem;
				box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
				border-radius: 1rem;
				padding: 0.25rem;
				width: 100%;
				max-width: 300px;

				&:hover {
					animation: moveUpDown 0.6s ease-in-out forwards;
					box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
				}

				& p {
					text-align: center;
					text-wrap: balance;
					color: rgba(0, 0, 0, 0.526);
				}

				& img {
					width: 200px;
					aspect-ratio: 1/1;
					border-radius: 50%;
					object-fit: cover;
					box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
					transition: transform 0.3s;

				}
			}

			& .resto {
				display: grid;
				place-items: center;

				grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
				gap: 2rem;
				width: 100%;
				position: relative;

				& .social-icons {
					display: flex;
					justify-content: center;
					gap: 1rem;
					position: absolute;
					bottom: -50px;
					left: 50%;
					transform: translateX(-50%);
					opacity: 0;
					transition: all 0.3s ease;

				}

				& .members-lab {
					position: relative;
					display: flex;
					justify-content: center;
					align-items: center;
					flex-flow: wrap column;
					gap: 0.25rem;
					width: 100%;
					max-width: 300px;
					box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
					border-radius: 1rem;
					padding: 0.25rem;
					transition:
						transform 0.3s ease,
						box-shadow 0.3s ease;

					overflow: hidden;

					&:hover {
						background-attachment: fixed;
						background-image: radial-gradient(
							circle at var(--x, 0) var(--y, 0),
							hsl(0 0% 100% / 0.175),
							hsl(0 0% 100% / 0.0125) 10rem
						);
						box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
					}

					&:hover .social-icons {
						bottom: 20px;
						opacity: 1;
					}

					&:after {
						content: "";
						position: absolute;
						inset: -1px;
						background-attachment: fixed;
						background-image: radial-gradient(
							circle at var(--x, 0) var(--y, 0),
							hsla(321, 61%, 77%, 0.75),
							transparent 5rem
						);
						pointer-events: none;
						z-index: -1;
					}

					& img {
						width: 200px;
						aspect-ratio: 1/1;
						border-radius: 50%;
						object-fit: cover;
						box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
					}
				}
			}
		}
	}

	.name {
		display: inline-block;
		text-align: center;
		margin-bottom: 5px;
		font-weight: 600;
		font-size: 1rem;
		text-wrap: balance;
		color: rgba(0, 0, 0, 0.818);
	}

	.grade {
		text-align: center;
		text-wrap: balance;
		font-size: 0.7rem;
	}

	.position {
		text-align: center;
		text-wrap: balance;
		font-size: 0.9rem;
	}

	@keyframes moveUpDown {
		0% {
			transform: translateY(0);
		}
		50% {
			transform: translateY(-2px); 
		}
		100% {
			transform: translateY(3px); 
		}
	}

</style>
