---
import PageHeader from "../../components/layout/pageHeader.astro";
import Layout from "../../layouts/Layout.astro";

const galleryItems = [
  {
    src: "/images/2.jpeg",
    title: "Ongoing Experiment",
    description: "Live cell imaging during a critical experiment.",
  },
  {
    src: "/images/1.jpeg",
    title: "Team Collaboration",
    description: "The team analyzing data and discussing results.",
  },
    {
    src: "/images/2.jpeg",
    title: "Ongoing Experiment",
    description: "Live cell imaging during a critical experiment.",
  },
  {
    src: "/images/1.jpeg",
    title: "Team Collaboration",
    description: "The team analyzing data and discussing results.",
  },
];
---

<Layout title="Home">
  <PageHeader
    title="Galería"
    description="Explora nuestra galería de imágenes y videos relacionados con nuestras investigaciones."
  />

  <article class="size-full min-h-screen">
    <ul
      class="grid grid-cols-[repeat(auto-fill,minmax(220px,1fr))] gap-4 py-4 place-content-center w-full"
    >
      {
        galleryItems.map((item, index) => (
          <li class="aspect-square cursor-pointer " data-index={index}>
            <button
              light-box
              class="h-full w-full overflow-hidden relative rounded-2xl"
              hidden-on-mobile
            >
              <img
                src={item.src}
                alt={item.title}
                class="max-w-full  object-cover h-full"
              />
            </button>
            <div class="sr-only">
              <h2>{item.title}</h2>
              <p>{item.description}</p>
            </div>
          </li>
        ))
      }
    </ul>
  </article>

  <figure id="lightbox" popover>
    <div class="lightbox-inner"></div>
  </figure>
</Layout>

<style>
  ul:has(li:hover) li {
    filter: grayscale(1);
    transition: filter 0.3s ease;
  }

  ul:has(li:hover) li:hover {
    filter: none;
  }

  /* popover */

  :where(#lightbox) {
    border: none;
    padding: 0;

    inline-size: fit-content;
    block-size: 100%;
    max-inline-size: 90vw;
    max-block-size: 90vh;
    aspect-ratio: 16 / 9;
    margin: auto;

    & .lightbox-inner {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      width: 100%;
    }

    /* popover transition out/in */
    &,
    &::backdrop {
      transition:
        display 0.3s allow-discrete,
        opacity 0.3s allow-discrete,
        transform 0.3s,
        overlay 0.3s;
      opacity: 0;
    }

    /* open state */
    &:popover-open {
      opacity: 1;
      transform: scale(1);

      &::backdrop {
        opacity: 1;
      }
    }

    @starting-style {
      &:popover-open,
      &:popover-open::backdrop {
        opacity: 0;
      }
    }

    @media (prefers-reduced-motion: no-preference) {
      transform: scale(0.95);
    }

    &::backdrop {
      background-image: radial-gradient(#0003, 25%, #000e);
    }

    /* lightbox sizing image */
    > img {
      display: block;
      max-inline-size: 100%;
      max-block-size: 100%;
      block-size: auto;
      object-fit: contain;
    }
  }

  @media (max-width: 640px) {
    [light-box] {
      pointer-events: none;
      cursor: default;
    }

    #lightbox {
      display: none !important;
    }
  }
</style>

<script is:inline>
  const $pictures = document.querySelectorAll("[light-box]");

  const state = {
    open: false,
  };

  $pictures.forEach((picture) => {
    picture.addEventListener("click", (e) => {
      if (!state.open) {
        lightBoxImage(picture);
      }
      // console.log("click", picture);
    });
  });

  // function lightBoxImage(picture) {
  //   lightbox.innerHTML = picture.querySelector(":scope img").outerHTML;

  //   lightbox.showPopover();
  // }

  function lightBoxImage(picture) {
    const imgHTML = picture.querySelector(":scope img").outerHTML;
    lightbox.querySelector(".lightbox-inner").innerHTML = imgHTML;
    lightbox.showPopover();
  }

  lightbox.addEventListener("toggle", (e) => {
    state.open = e.newState === "open";
  });
</script>
